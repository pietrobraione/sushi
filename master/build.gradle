plugins {
    id 'application'
    id 'eclipse'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

def glpkJavaVersion = '1.12.0'
def glpkJavaJniLocation = '/usr/local/lib/jni'
def javaHome = javaToolchains.compilerFor { languageVersion = javaVersion }.get().metadata.installationPath.asFile.toString()

repositories {
    maven {
        url = 'https://www.xypron.de/repository' //for glpk-java
    }
    flatDir {
    	dirs "${javaHome}/lib", "${project(':jbse').projectDir.toString()}/libs" //for tools.jar and for the patched javassist.jar
    }
}

dependencies {
    implementation 'args4j:args4j:2.32'
    implementation 'org.gnu.glpk:glpk-java:' + glpkJavaVersion
    implementation 'org.ojalgo:ojalgo:48.0.0'
    implementation name: 'tools'
    implementation project(':sushi-lib')
    implementation project(':jbse')
}

task wrapper(type: Wrapper) {
    gradleVersion = '7.1.1'
}

task copyToLib(type: Copy) {
    into "deps"
    from configurations.compileClasspath
}

shadowJar {
    classifier = 'shaded'
    exclude 'tools.jar'
    exclude 'glpk-java*'
    relocate 'javassist', 'sushi.javassist'
    relocate 'org.kohsuke', 'sushi.org.kohsuke'
    relocate 'org.jacoco', 'sushi.org.jacoco'
    relocate 'org.objectweb', 'sushi.org.objectweb'
    relocate 'org.ojalgo', 'sushi.org.ojalgo'
}

build.dependsOn(copyToLib)

build.dependsOn 'shadowJar'

eclipse {
    classpath { 
        containers 'org.eclipse.buildship.core.gradleclasspathcontainer'
        file {
	        whenMerged { cp ->
	        	def entries = cp.getEntries()
	            def container = entries.find { it.path == 'org.eclipse.buildship.core.gradleclasspathcontainer' }
	            container.nativeLibraryLocation = glpkJavaJniLocation
	        }
        }
    }
}

application {
    mainClass.set('sushi.Main')
}

jar {
    manifest {
        attributes 'Implementation-Title': 'SUSHI',
                   'Implementation-Vendor': 'University of Milano-Bicocca and University of Lugano',
                   'Implementation-Version': archiveVersion
    }
}
